{"version":3,"sources":["logo.svg","components/EmpTable.js","utils/API.js","components/Main.js","App.js","reportWebVitals.js","index.js"],"names":["EmpTable","props","className","filteredResults","map","result","alt","src","picture","thumbnail","name","first","last","phone","email","axios","get","Main","state","filteredResult","search","searchUsers","API","then","res","setState","data","results","console","log","catch","err","handleInputChange","event","target","value","filtered","filter","obj","toLowerCase","includes","handleSort","firstAscend","sort","a","b","nameA","nameB","firstDescend","lastAscend","lastDescend","emailAscend","emailDescend","dobAscend","dobA","dob","date","slice","dobB","dobDescend","this","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ec12651c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\n//start above\r\n \r\nfunction EmpTable (props) {\r\n \r\nreturn (\r\n//creating 100 tables with 4 columns\r\n//props, through REACT, takes API Info starting in body\r\n<table className = \"table\">\r\n    <thead>\r\n    <tr>\r\n        <th>Picture</th>\r\n        <th>Name</th>\r\n        <th>Phone</th>\r\n        <th>Email</th>\r\n    </tr>\r\n    </thead>\r\n    <tbody>        \r\n        {props.filteredResults.map(result => (\r\n    <div>\r\n    <tr>\r\n        <td><img alt=\"user_img\" src={result.picture.thumbnail} /></td>\r\n        <td>{result.name.first}  {result.name.last}</td>\r\n        <td>{result.phone}</td>\r\n        <td>{result.email}</td>\r\n    </tr>\r\n    </div>\r\n    ))}\r\n    </tbody>\r\n</table>\r\n \r\n)}\r\n \r\n//end below\r\nexport default EmpTable;\r\n","import axios from 'axios';\r\n\r\nconst queryURL = \"https://randomuser.me/api/?results=100&inc=picture,name,phone,email&nat=us\";\r\n\r\n\r\nexport default {\r\n    search: function () {\r\n        return axios.get(queryURL);\r\n    },\r\n};\r\n","import React, { Component } from \"react\";\r\nimport searchBar from \"./searchBar\"\r\nimport EmpTable from \"./EmpTable\";\r\nimport API from \"../utils/API\";\r\n\r\nclass Main extends Component {\r\n    state = {\r\n        result: [],\r\n        filteredResult: [],\r\n        search: ''\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.searchUsers();\r\n    };\r\n\r\n    searchUsers = () => {\r\n        API.search()\r\n            .then(res => {\r\n                this.setState({ result: res.data.results });\r\n                this.setState({ filteredResult: res.data.results });\r\n                console.log(this.state.result);\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    handleInputChange = event => {\r\n\r\n        const { name, value } = event.target;\r\n\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n\r\n        let filtered = this.state.result.filter(obj => {\r\n            if (obj.name.first.toLowerCase().includes(value.toLowerCase()) || obj.name.last.toLowerCase().includes(value.toLowerCase())) {\r\n                return obj;\r\n            }\r\n        })\r\n\r\n        this.setState({ filteredResult: filtered });\r\n\r\n    };\r\n\r\n    handleSort = event => {\r\n        console.log(event.target.name)\r\n        switch(event.target.name) {\r\n\r\n            case 'firstNameAscend':\r\n\r\n                let firstAscend = this.state.filteredResult;\r\n\r\n                firstAscend.sort((a, b) => {\r\n                    let nameA = a.name.first.toLowerCase();\r\n                    let nameB = b.name.first.toLowerCase();\r\n\r\n                    if (nameA < nameB) {\r\n                        return -1;\r\n                    }\r\n                    if (nameA > nameB) {\r\n                        return 1;\r\n                    }\r\n                    return 0;\r\n                })\r\n\r\n                this.setState({ filteredResult: firstAscend })\r\n                break;\r\n\r\n            case 'firstNameDescend':\r\n\r\n                let firstDescend = this.state.filteredResult;\r\n\r\n                firstDescend.sort((a, b) => {\r\n                    let nameA = a.name.first.toLowerCase();\r\n                    let nameB = b.name.first.toLowerCase();\r\n\r\n                    if (nameA < nameB) {\r\n                        return 1;\r\n                    }\r\n                    if (nameA > nameB) {\r\n                        return -1;\r\n                    }\r\n                    return 0;\r\n                })\r\n\r\n                this.setState({ filteredResult: firstDescend })\r\n                break;\r\n\r\n            case 'lastNameAscend':\r\n\r\n                let lastAscend = this.state.filteredResult;\r\n\r\n                lastAscend.sort((a, b) => {\r\n                    let nameA = a.name.last.toLowerCase();\r\n                    let nameB = b.name.last.toLowerCase();\r\n\r\n                    if (nameA < nameB) {\r\n                        return -1;\r\n                    }\r\n                    if (nameA > nameB) {\r\n                        return 1;\r\n                    }\r\n                    return 0;\r\n                })\r\n\r\n                this.setState({ filteredResult: lastAscend })\r\n                break;\r\n\r\n            case 'lastNameDescend':\r\n\r\n                let lastDescend = this.state.filteredResult;\r\n\r\n                lastDescend.sort((a, b) => {\r\n                    let nameA = a.name.last.toLowerCase();\r\n                    let nameB = b.name.last.toLowerCase();\r\n\r\n                    if (nameA < nameB) {\r\n                        return 1;\r\n                    }\r\n                    if (nameA > nameB) {\r\n                        return -1;\r\n                    }\r\n                    return 0;\r\n                })\r\n\r\n                this.setState({ filteredResult: lastDescend })\r\n                break;\r\n\r\n            case 'emailAscend':\r\n\r\n                let emailAscend = this.state.filteredResult;\r\n\r\n                emailAscend.sort((a, b) => {\r\n                    let nameA = a.email.toLowerCase();\r\n                    let nameB = b.email.toLowerCase();\r\n\r\n                    if (nameA < nameB) {\r\n                        return -1;\r\n                    }\r\n                    if (nameA > nameB) {\r\n                        return 1;\r\n                    }\r\n                    return 0;\r\n                })\r\n\r\n                this.setState({ filteredResult: emailAscend })\r\n                break;\r\n\r\n            case 'emailDescend':\r\n\r\n                let emailDescend = this.state.filteredResult;\r\n\r\n                emailDescend.sort((a, b) => {\r\n                    let nameA = a.email.toLowerCase();\r\n                    let nameB = b.email.toLowerCase();\r\n\r\n                    if (nameA < nameB) {\r\n                        return 1;\r\n                    }\r\n                    if (nameA > nameB) {\r\n                        return -1;\r\n                    }\r\n                    return 0;\r\n                })\r\n\r\n                this.setState({ filteredResult: emailDescend })\r\n                break;\r\n            \r\n            case 'dobAscend':\r\n                \r\n                let dobAscend = this.state.filteredResult;\r\n\r\n                dobAscend.sort((a, b) => {\r\n                    let dobA = a.dob.date.slice(0,10);\r\n                    \r\n\r\n                    let dobB = b.dob.date.slice(0,10);\r\n                    \r\n\r\n                    if (dobA < dobB) {\r\n                        return -1;\r\n                    }\r\n                    if (dobA > dobB) {\r\n                        return 1;\r\n                    }\r\n                    return 0;\r\n                })\r\n\r\n                this.setState({ filteredResult: dobAscend })\r\n                break;\r\n\r\n            case 'dobDescend':\r\n                \r\n                let dobDescend = this.state.filteredResult;\r\n\r\n                dobDescend.sort((a, b) => {\r\n                    let dobA = a.dob.date.slice(0,10);\r\n                    \r\n\r\n                    let dobB = b.dob.date.slice(0,10);\r\n                    \r\n\r\n                    if (dobA < dobB) {\r\n                        return 1;\r\n                    }\r\n                    if (dobA > dobB) {\r\n                        return -1;\r\n                    }\r\n                    return 0;\r\n                })\r\n\r\n                this.setState({ filteredResult: dobDescend })\r\n                break;\r\n\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <searchBar />\r\n                <EmpTable filteredResults={this.state.filteredResult} />\r\n            </div>   \r\n        );\r\n    }\r\n}\r\n\r\nexport default Main;","import logo from './logo.svg';\r\nimport './App.css';\r\nimport Main from \"./components/Main\"\r\n\r\nfunction App() {\r\n    return <Main />;\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}